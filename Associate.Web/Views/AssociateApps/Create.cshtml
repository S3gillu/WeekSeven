@model Associate.Core.AssociateApp
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<style>
    .input-validation-error {
        border: 1px solid #ff0000;
    }

 .btn-file {
    position: relative;
    overflow: hidden;
    }
    .btn-file input[type=file] {
    position: absolute;
    top: 0;
    right: 0;
    min-width: 100%;
    min-height: 100%;
    font-size: 100px;
    text-align: right;
    filter: alpha(opacity=0);
    opacity: 0;
    outline: none;
    background: white;
    cursor: inherit;
    display: block;
    }

    #img-upload{
    width: 100%;
    }
.input-group{margin-left:120px;}
.lab{margin-left:25px;}


</style>






    @using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()




    <div class="form-horizontal">
        <h4>Associate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
          
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder="Enter Your Name"} })
                <progress max="100" value="20">  </progress>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
               
</div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" , @placeholder = "Enter Your Email" } })
               
                    <progress max="100" value="40">  </progress>

                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Your Phone" } })
                <progress max="100" value="60">  </progress>
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.MaritalStatus,"Married")
                @Html.Label("Married", "Married") &nbsp;
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Your District" } })
                <progress max="100" value="80">  </progress>
              @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
             
                    @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Your Town" } })
                    <progress max="100" value="100">  </progress>
                    @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
       
            </div>
        </div>



        <div class="container">
           
                <div class="form-group">
                    <label class="lab">Upload Image</label>
                    <div class="input-group">
                        <span class="input-group-btn">
                            <span class="btn btn-default btn-file">
                                Browse… <input type="file" id="imgInp">
                            </span>
                        </span>
                        <input type="text" class="form-control" readonly>
                    </div>
                    <img id='img-upload' />
                </div>
       
        </div>


     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                <input type="reset" value="reset" class="btn btn-danger" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-large" })
            </div>
        </div>

</div>
    
        }




 




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $(document).on('change', '.btn-file :file', function () {
            var input = $(this),
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [label]);
        });

        $('.btn-file :file').on('fileselect', function (event, label) {

            var input = $(this).parents('.input-group').find(':text'),
                log = label;

            if (input.length) {
                input.val(log);
            } else {
                if (log) alert(log);
            }

        });
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img-upload').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });
    });





</script>



}





